[general]
pythonfile = ~/.offlineimap.py
accounts = Fastmail, DirectComms, OldEmail
socktimeout = 60
maxsyncaccounts = 3
fsync = false

[Account Fastmail]
localrepository = Fastmail-Local
remoterepository = Fastmail-Remote
status_backend = sqlite

[Repository Fastmail-Local]
localfolders = ~/.mail/mike-fastmail.com
type = Maildir
nametrans = lambda folder: folder == 'INBOX' and 'INBOX' or ('INBOX.' + folder)

[Repository Fastmail-Remote]
readonly = true
type = IMAP
remotehost = mail.messagingengine.com
remoteport = 993
ssl = yes
cert_fingerprint   = 958b1601563aef92607a41eb5bad22e3cace8431
holdconnectionopen = yes
maxconnections = 3
remoteuser = mikealdred@fastmail.fm
remotepasseval = get_keychain_pass(account="mikealdred@fastmail.fm", server="mail.messagingengine.com")
nametrans = lambda folder: re.sub('^INBOX\.', '', folder)
folderfilter = lambda folder: folder not in [
                                         'INBOX.Junk Mail',
                                         'INBOX.Trash',
                                         ]

[Account DirectComms]
localrepository = DirectComms-Local
remoterepository = DirectComms-Remote
status_backend = sqlite

[Repository DirectComms-Local]
localfolders = ~/.mail/mike-directcommunications.com.au
type = Maildir

[Repository DirectComms-Remote]
readonly = true
type = Gmail
remoteuser = mike.aldred@directcommunications.com.au
remotepasseval = get_keychain_pass(account="mike.aldred@directcommunications.com.au", server="imap.gmail.com")
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             '[Gmail]/Important',
                                             '[Gmail]/All Mail',
                                             '[Gmail]/Spam',
                                             '[Gmail]/Bin',
                                             ]
# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt

[Account OldEmail]
localrepository = OldEmail-Local
remoterepository = OldEmail-Remote
status_backend = sqlite

[Repository OldEmail-Local]
localfolders = ~/.mail/mike-gmail.com
type = Maildir

[Repository OldEmail-Remote]
readonly = true
type = Gmail
remoteuser = mike.aldred@gmail.com
remotepassval = get_keychain_pass(account="mike.aldred@gmail.com", server="imap.gmail.com")
nametrans = lambda foldername:  re.sub ('^\[google_mail\].', '',
                                re.sub ('sent_mail', 'sent',
                                re.sub ('starred', 'flagged',
                                re.sub (' ', '_', foldername.lower()))))

folderfilter = lambda foldername: foldername not in ['[Google Mail]/All Mail',
                                                     '[Google Mail]/Trash',
                                                     '[Google Mail]/Important',
                                                     '[Google Mail]/Spam',
                                                     '[Google Mail]/Bin',
                                                     ]


# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
