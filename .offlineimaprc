[general]
pythonfile = ~/.offlineimap.py
accounts = Fastmail, DirectComms
socktimeout = 10
maxsyncaccounts = 1
fsync = true
ssl_versions = tls1_2
status_backend = sqlite

[Account Fastmail]
localrepository = Fastmail-Local
remoterepository = Fastmail-Remote

[Repository Fastmail-Local]
localfolders = ~/.mail/mike-fastmail.com
type = Maildir
nametrans = lambda folder: {'Sent': 'Sent Items'}.get(folder, folder)

[Repository Fastmail-Remote]
type = IMAP
remotehost = mail.messagingengine.com
remoteport = 992
ssl = yes
cert_fingerprint = c3b43678680c605062beffc6fac48d5b0623a27f448f7fa38bd0ab6f673323d4ccb6e841fb8828e4ad174070caef4cbf3a06e3ef86ae2ea605afa35ad7ef3abd
holdconnectionopen = yes
maxconnections = 3
remoteuser = mikealdred@fastmail.fm
remotepasseval = get_keychain_pass(account="mikealdred@fastmail.fm")
readonly = true
auth_mechanisms = LOGIN

nametrans = lambda folder: {'Sent Items': 'Sent'}.get(folder, folder)

folderfilter = lambda folder: folder not in ['Junk Mail',
                                             'Notes',
                                             'Trash']

[Account DirectComms]
localrepository = DirectComms-Local
remoterepository = DirectComms-Remote

[Repository DirectComms-Local]
localfolders = ~/.mail/mike-directcommunications.com.au
type = Maildir
nametrans = lambda folder: {'Drafts':    '[Gmail]/Drafts',
                            'Sent':      '[Gmail]/Sent Mail',
                            'Trash':     '[Gmail]/Trash',
                            'Archive':   '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository DirectComms-Remote]
type = Gmail
maxconnections = 15
remoteuser = mike.aldred@directcommunications.com.au
remotepasseval = get_keychain_pass(account="mike.aldred@directcommunications.com.au")
auth_mechanisms = LOGIN
readonly = true
nametrans = lambda folder: {'[Gmail]/Drafts':    'Drafts',
                            '[Gmail]/Sent Mail': 'Sent',
                            '[Gmail]/Trash':     'Trash',
                            '[Gmail]/All Mail':  'Archive',
                            }.get(folder, folder)

folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             '[Gmail]/Spam',
                                             '[Gmail]/Starred',
                                             'Deleted Messages',
                                             'Notes']
# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
ssl_versions = tls1_2

[Account OldEmail]
localrepository = OldEmail-Local
remoterepository = OldEmail-Remote

[Repository OldEmail-Local]
type = Maildir
localfolders = ~/.mail/mike-gmail.com
nametrans = lambda folder: {'Drafts':    '[Google Mail]/Drafts',
                            'Sent':      '[Google Mail]/Sent Mail',
                            'Trash':     '[Google Mail]/Bin',
                            'All Mail':  '[Google Mail]/All Mail',
                            }.get(folder, folder)

[Repository OldEmail-Remote]
type = Gmail
remoteuser = mike.aldred@gmail.com
remotepasseval = get_keychain_pass(account="mike.aldred@gmail.com")
auth_mechanisms = LOGIN
readonly = true
folderfilter = lambda foldername: foldername not in ['[Google Mail]/All Mail',
                                                     '[Google Mail]/Trash',
                                                     '[Google Mail]/Important',
                                                     '[Google Mail]/Spam',
                                                     '[Google Mail]/Bin',
                                                     '[Google Mail]/Starred',
                                                     'Notes']

nametrans = lambda folder: {'[Google Mail]/Drafts':    'Drafts',
                            '[Google Mail]/Sent Mail': 'Sent',
                            '[Google Mail]/Bin':       'Trash',
                            '[Google Mail]/All Mail':  'All Mail',
                            }.get(folder, folder)

# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt

[Account Uni]
localrepository = Uni-Local
remoterepository = Uni-Remote

[Repository Uni-Local]
type = Maildir
localfolders = ~/.mail/mike-student.curtin.edu.au
nametrans = lambda folder: {'Trash': 'Deleted Items',
                            'Sent':  'Sent Items'
                           }.get(folder, folder)

[Repository Uni-Remote]
type = IMAP
remoteport = 993
ssl = yes
remotehost = outlook.office365.com
remoteuser = 09831542@student.curtin.edu.au
remotepasseval = get_keychain_pass(account="09831542@student.curtin.edu.au")
readonly = true
auth_mechanisms = LOGIN
folderfilter = lambda foldername: foldername in ['INBOX',
                                                 'Drafts',
                                                 'Sent Items',
                                                 'Deleted Items',
                                                 'Archive']

nametrans = lambda folder: {'Deleted Items': 'Trash',
                            'Sent Items': 'Sent',
                           }.get(folder, folder)

# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt

[Account Uni-Staff]
localrepository = Uni-Staff-Local
remoterepository = Uni-Staff-Remote

[Repository Uni-Staff-Local]
type = Maildir
localfolders = ~/.mail/mike-staff.curtin.edu.au

[Repository Uni-Staff-Remote]
readonly = true
type = IMAP
remoteport = 993
ssl = yes
remotehost = outlook.office365.com
remoteuser = 213849B@curtin.edu.au
remotepasseval = get_keychain_pass(account="213849B@curtin.edu.au")

auth_mechanisms = LOGIN
readonly = true
folderfilter = lambda foldername: foldername in ['INBOX',
                                                 'Drafts',
                                                 'Sent Items',
                                                 'Deleted Items',
                                                 'Archive']

# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
